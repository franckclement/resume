image: ruby:2.3

cache:
  paths: 
    - vendor/

before_script:
  - gem install bundler
  - bundle install --path vendor

build:
  stage: build
  script:
    - JEKYLL_ENV=production bundle exec jekyll build -d public/
  artifacts:
    paths:
      - public
  only:
    - master

vars:
  type: test
  script:
    - 'export S3_ID="$(echo "$S3_ID")" >> s3_deploy_vars'
    - 'export S3_SECRET="$(echo "$S3_SECRET")" > s3_deploy_vars'
    - 'export S3_BUCKET="$(echo "$S3_BUCKET")" > s3_deploy_vars'
    - 'export CLOUDFRONT_DISTRIBUTION_ID="$(echo "$CLOUDFRONT_DISTRIBUTION_ID")" > s3_deploy_vars'
  artifacts:
    paths:
      - s3_deploy_vars
  only:
    - master

deploy:
  stage: deploy
  script:
    - apt-get update 
    - apt-get install -y software-properties-common 
    - apt-get install -y debconf-utils
    - apt-get --allow-releaseinfo-change update
    - apt-add-repository -y ppa:webupd8team/java
    - apt-get update
    - echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true" | debconf-set-selections
    - apt-get install -y --allow-unauthenticated oracle-java8-installer
    - apt-get install -y --allow-unauthenticated oracle-java8-set-default
    - source s3_deploy_vars
    - bundle install --path src/vendor
    # Some strange problem with using the wrong Ruby version:
    # https://stackoverflow.com/questions/54175990/how-to-fix-s3-website-issue-while-pushing-jekyll-site-on-cloudfront-through-gi
    #- bundle exec s3_website push
    - bundle exec s3_website install
    - java -cp $(bundle show s3_website)/*.jar s3.website.Push
  artifacts:
    paths:
      - public
  only:
    - master